---

- name: Build Galaxy client
  block:

    - name: Ensure client_build_hash.txt exists
      copy:
        content: "new-unbuilt"
        dest: "{{ galaxy_static_dir }}/client_build_hash.txt"
        force: no

    - name: Get current client commit id
      slurp:
        src: "{{ galaxy_static_dir }}/client_build_hash.txt"
      register: __galaxy_client_build_version_result

    - name: Check if Galaxy was checked out from git
      stat:
        path: "{{ galaxy_server_dir }}/.git"
      register: __galaxy_from_git

    - name: Get current Galaxy commit id
      git:
        dest: "{{ galaxy_server_dir }}"
        repo: "{{ galaxy_repo }}"
        update: no
      register: __galaxy_git_stat_result
      when: __galaxy_from_git.stat.exists

    - name: Set client build version fact
      set_fact:
        __galaxy_client_build_version: "{{ __galaxy_client_build_version_result.content | b64decode | trim }}"

    - name: Set client build version fact
      set_fact:
        __galaxy_current_commit_id: "{{ __galaxy_git_stat_result.after if __galaxy_from_git.stat.exists else 'none' }}"
      when: __galaxy_from_git.stat.exists

    - name: Build Galaxy client if needed
      block:

        - name: Report client version mismatch
          debug:
            msg: "Galaxy client is out of date: {{ __galaxy_client_build_version }} != {{ __galaxy_current_commit_id }}"
          changed_when: true
          when: __galaxy_from_git.stat.exists

        - name: Ensure galaxy_node_version is set
          include_tasks: _inc_node_version.yml
          when: galaxy_node_version is undefined

        - name: Install node
          command: "nodeenv -n {{ galaxy_node_version }} -p"
          environment:
            PATH: "{{ galaxy_venv_dir }}/bin:{{ ansible_env.PATH }}"
            VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
          args:
            creates: "{{ galaxy_venv_dir }}/bin/npm"

        - name: Install yarn
          npm:
            executable: "{{ galaxy_venv_dir }}/bin/npm"
            name: yarn
            global: yes
          environment:
            PATH: "{{ galaxy_venv_dir }}/bin:{{ ansible_env.PATH }}"
            VIRTUAL_ENV: "{{ galaxy_venv_dir }}"

        - name: Include client build process
          include_tasks: "_inc_client_build_{{ 'make' if galaxy_client_make_target is not none else 'steps' }}.yml"

      when: not __galaxy_from_git.stat.exists or (__galaxy_client_build_version != __galaxy_current_commit_id)

  remote_user: "{{ galaxy_remote_users.privsep | default(__galaxy_remote_user) }}"
  become: "{{ true if galaxy_become_users.privsep is defined else __galaxy_become }}"
  become_user: "{{ galaxy_become_users.privsep | default(__galaxy_become_user) }}"
